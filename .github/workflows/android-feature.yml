name: Android Feature

on:
  push:
    branches:
      - '*'
      - '!main'

env:
  CACHE_VERSION: 1 # Increment this to invalidate the cache.

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - run: chmod u+x ./clear_gradle_cache.sh
      - run: ./clear_gradle_cache.sh
      - uses: actions/cache@v3
        with:
          path: |
           ~/.gradle/caches
           ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ env.CACHE_VERSION }}

      - name: Check Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Compile
        run: bash ./gradlew compileDebugSources compileDebugUnitTestSources -PdisablePreDex --quiet

      - name: Lint
        run: bash ./gradlew app:lintDebug ktlintCheck -PdisablePreDex --quiet

      - name: Unit tests
        run: bash ./gradlew test --stacktrace

      - name: Upload build reports
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: build-reports
          path: app/build/reports

  ui-test:
    needs: build
    runs-on: macOS-11 # enables hardware acceleration in the virtual machine
    timeout-minutes: 60
    strategy:
      matrix:
        api-level: [26]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - run: chmod u+x ./clear_gradle_cache.sh
      - run: ./clear_gradle_cache.sh
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ env.CACHE_VERSION }}

      - name: Gradle cache
        uses: gradle/gradle-build-action@v2.4.0

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          force-avd-creation: false
          profile: Nexus 6
          ram-size: 4096M
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          force-avd-creation: false
          profile: Nexus 6
          ram-size: 4096M
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: |
            adb logcat --clear || true
            adb logcat --clear || true
            adb logcat --clear || true
            adb logcat > logcat.txt &
            ./gradlew connectedDebugAndroidTest --stacktrace

      - name: Upload logcat output
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: logcat-${{ matrix.api-level }}
          path: logcat.txt

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-reports
          path: app/build/reports
