plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

android {
    namespace 'com.chrisa.theoscars'
    compileSdk 33

    defaultConfig {

        applicationId "com.chrisa.theoscars"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        def movieDbKey = findProperty('movie_db_key')  ?: 'your_movie_db_key'
        buildConfigField "String", "MOVIE_DB_KEY", "\"$movieDbKey\""

        testInstrumentationRunner "com.chrisa.theoscars.HiltTestRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments << ["room.schemaLocation": "$projectDir/schemas".toString()]
                arguments << ['room.incremental': 'true']
            }
        }
    }

    testOptions.unitTests.includeAndroidResources = true

    buildFeatures {
        buildConfig = true
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }
    kotlin {
        jvmToolchain(11)
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

// Allow references to generated code
kapt {
    correctErrorTypes true
}

dependencies {

    def coroutinesVersion = '1.6.4'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.10"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation("androidx.core:core-splashscreen:1.0.0")
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation ("androidx.work:work-runtime-ktx:2.8.0")

    /* Compose */
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation platform('androidx.compose:compose-bom:2023.01.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material:material'
    implementation 'androidx.compose.material:material-icons-extended'
    implementation 'androidx.compose.material3:material3:1.1.0-alpha08'
    implementation 'androidx.navigation:navigation-compose'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
    implementation 'com.google.android.material:material:1.8.0'

    implementation "com.google.accompanist:accompanist-systemuicontroller:0.28.0"

    /* Dagger */
    def daggerVersion = '2.45'
    implementation("com.google.dagger:dagger:$daggerVersion")
    implementation("com.google.dagger:hilt-android:$daggerVersion")
    implementation("androidx.hilt:hilt-navigation-compose:1.0.0")
    implementation "androidx.hilt:hilt-work:1.0.0"
    kapt("com.google.dagger:dagger-compiler:$daggerVersion")
    kapt("com.google.dagger:dagger-android-processor:$daggerVersion")
    kapt("com.google.dagger:hilt-android-compiler:$daggerVersion")

    kapt("com.google.dagger:hilt-compiler:$daggerVersion")
    kaptTest("com.google.dagger:hilt-compiler:$daggerVersion")
    api("com.google.dagger:dagger-android:$daggerVersion")
    api("com.google.dagger:dagger-android-support:$daggerVersion")

    /* Room */
    implementation "androidx.room:room-runtime:2.5.0"
    implementation "androidx.room:room-ktx:2.5.0"
    kapt "androidx.room:room-compiler:2.5.0"

    implementation("io.coil-kt:coil-compose:2.2.2")

    /* moshi */
    implementation("com.squareup.moshi:moshi:1.14.0")
    implementation("com.squareup.moshi:moshi-kotlin:1.14.0")
    implementation("com.squareup.moshi:moshi-adapters:1.14.0")

    annotationProcessor('com.squareup.moshi:moshi-kotlin-codegen:1.14.0')
    kaptTest("com.squareup.moshi:moshi-kotlin-codegen:1.14.0")

    /* ok-http */
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.0"
    implementation "com.squareup.retrofit2:retrofit:2.6.2"
    implementation "com.squareup.retrofit2:converter-moshi:2.6.2"

    /* misc */
    implementation 'com.jakewharton.timber:timber:5.0.1'

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    androidTestImplementation "androidx.test.ext:truth:1.5.0"

    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.45'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.45'

    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    testImplementation "io.mockk:mockk:1.9.3"
    testImplementation "org.robolectric:robolectric:4.9.2"
    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    testImplementation "androidx.test:core:1.5.0"
    testImplementation "androidx.test.ext:junit:1.1.5"
    testImplementation "androidx.test.ext:truth:1.5.0"
    testImplementation 'app.cash.turbine:turbine:0.7.0'
}